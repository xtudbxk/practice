# 产品经理(PM)有很多好的idea，而这些idea需要程序员实现。现在有N个PM，在某个时间会想出一个 idea，每个 idea 有提出时间、所需时间和优先等级。对于一个PM来说，最想实现的idea首先考虑优先等级高的，相同的情况下优先所需时间最小的，还相同的情况下选择最早想出的，没有 PM 会在同一时刻提出两个 idea
# 同时有M个程序员，每个程序员空闲的时候就会查看每个PM尚未执行并且最想完成的一个idea,然后从中挑选出所需时间最小的一个idea独立实现，如果所需时间相同则选择PM序号最小的。直到完成了idea才会重复上述操作。如果有多个同时处于空闲状态的程序员，那么他们会依次进行查看idea的操作
# 求每个idea实现的时间
# 输入第一行三个数N、M、P，分别表示有N个PM，M个程序员，P个idea。随后有P行，每行有4个数字，分别是PM序号、提出时间、优先等级和所需时间。输出P行，分别表示每个idea实现的时间点

import heapq

def get_ideas_implementing_time(ideas,N,M):
    ideas_for_pm = {}
    avaiable_ideas_for_pm = {}
    time_of_ideas = []
    for idea_index,single_idea in enumerate(ideas):
        if single_idea[0] not in ideas_for_pm:
            ideas_for_pm[single_idea[0]] = []
            avaiable_ideas_for_pm[single_idea[0]] = []
        heapq.heappush(ideas_for_pm[single_idea[0]],[single_idea[1],-single_idea[2],single_idea[3],single_idea[1],single_idea[0],idea_index])
        heapq.heappush(time_of_ideas,single_idea[1])
    #print(f"ideas_for_pm:{ideas_for_pm}")
    implement_time = [-1]*len(ideas)
    time_for_programmer_is_free = [1]*M
    avaiable_ideas_num = 0
    for _ in range(len(ideas)):
        ideas_wait_programmer_to_choose = []
        #print(f"time_of_ideas:{time_of_ideas}")
        #print(f"time_for_programmer_is_free:{time_for_programmer_is_free}")
        #print(f"avaiable_ideas_for_pm:{avaiable_ideas_for_pm}")
        if len(time_of_ideas) > 0 and (avaiable_ideas_num <= 0 or time_of_ideas[0] <= time_for_programmer_is_free[0]):
            current_time = max(time_of_ideas[0],time_for_programmer_is_free[0])
            for pm_index in ideas_for_pm.keys():
                while(len(ideas_for_pm[pm_index])>0 and ideas_for_pm[pm_index][0][0] <= current_time):
                    heapq.heappush(avaiable_ideas_for_pm[pm_index],heapq.heappop(ideas_for_pm[pm_index])[1:])
                    heapq.heappop(time_of_ideas)
                    avaiable_ideas_num += 1
        else:
            current_time = max(current_time,time_for_programmer_is_free[0])
        #print(f"avaiable_ideas_for_pm:{avaiable_ideas_for_pm}")
        #print(f"ideas_wait_programmer_to_choose:{ideas_wait_programmer_to_choose}")
        for pm_index in avaiable_ideas_for_pm.keys():
            if len(avaiable_ideas_for_pm[pm_index]) > 0:
                negative_priority,need_time,proposal_time,pm_index_this_idea,idea_index = avaiable_ideas_for_pm[pm_index][0]
                heapq.heappush(ideas_wait_programmer_to_choose,[need_time,pm_index_this_idea,idea_index])
        #print(f"ideas_wait_programmer_to_choose:{ideas_wait_programmer_to_choose}")
        completed_idea_need_time,completed_pm_index,completed_idea_index = ideas_wait_programmer_to_choose[0]
        heapq.heapreplace(time_for_programmer_is_free,current_time + completed_idea_need_time)
        implement_time[completed_idea_index] = current_time + completed_idea_need_time
        heapq.heappop(avaiable_ideas_for_pm[completed_pm_index])
        avaiable_ideas_num -= 1

    return implement_time



        

if __name__ == "__main__":
    ideas = [[1,1,1,2],[1,2,1,1],[1,3,2,2],[2,1,1,2],[2,3,5,5]]
    N,M = 2,2
    #ideas = [[9,675,233,9],
    #    [60,976,96,8],
    #    [3,1375,943,43],
    #    [65,1886,963,21],
    #    [91,1561,597,47],
    #    [61,1821,30,31],
    #    [30,1711,616,40],
    #    [40,784,521,17],
    #    [10,731,733,12],
    #    [52,1321,832,34],
    #    [100,894,441,1]]
    #N,M = 100,2
    ideas = [
[67,17,158,40],
[30,1757,644,29],
[57,1485,11,50],
[47,293,506,3],
[68,1540,265,43],
[10,299,444,50],
[57,663,746,5],
[11,1772,644,24],
[10,1041,230,4],
[5,1190,87,13],
[17,1691,34,48],
[18,1726,696,42],
[5,874,450,50],
[27,1658,414,35],
[1,1530,512,33],
[22,634,158,45],
[70,711,362,6],
[97,1478,297,25],
[47,1371,277,21],
[91,983,924,11],
[80,1009,964,18],
[27,481,414,7],
[36,1368,498,44],
[49,1201,407,32],
[15,1697,869,37],
[43,1705,847,42],
[47,1330,441,4],
[23,594,30,19],
[56,193,711,20],
[8,996,643,35],
[90,1068,792,32],
[80,1700,947,29],
[79,1624,760,16],
[88,481,183,32],
[58,910,273,39],
[25,1503,629,16],
[5,1434,341,42],
[15,1755,658,21],
[46,1294,430,36],
[81,1473,83,29],
[90,1279,597,11],
[75,1036,371,26],
[79,478,747,34],
[91,1799,671,38],
[61,1269,65,36],
[50,82,897,15],
[24,1529,501,32],
[51,1108,768,50],
[53,204,786,41],
[79,547,535,10],
[46,278,957,46],
[55,767,270,43],
[18,43,511,43],
[73,947,385,31],
[100,850,150,39],
[80,723,885,47],
[67,1371,527,1],
[12,652,313,22],
[67,1042,783,47],
[64,1470,152,22],
[32,1783,833,39],
[48,1707,188,39],
[14,403,215,41],
[8,1260,383,15],
[11,1421,693,3],
[11,1571,512,11],
[44,1384,251,5],
[14,248,130,5],
[46,1165,656,45],
[5,1477,954,12],
[8,1639,805,15],
[67,1656,355,21],
[51,844,897,40],
[14,1778,825,49],
[26,1729,436,30],
[55,1738,227,18],
[57,1710,919,42],
[45,672,420,4],
[82,1349,950,23],
[38,1857,795,45],
[41,1692,916,35],
[10,300,378,29],
[95,1200,188,8],
[72,1898,869,37],
[64,92,738,39],
[53,1503,709,1],
[20,966,984,39],
[15,1715,475,3],
[52,611,974,49],
[49,513,893,23],
[91,1812,68,11],
[63,1290,435,16],
[4,650,369,36],
[42,44,990,27],
[45,161,740,33],
[41,1060,90,46],
[25,565,658,20],
[43,58,579,34],
[86,1278,601,23],
[27,1583,95,48],
[45,670,463,9],
[59,927,206,14],
[72,436,728,6],
[96,1153,161,20],
[38,339,498,38],
[80,1838,923,27],
[85,1055,329,46],
[25,596,372,38],
[17,335,24,25],
[49,111,546,43],
[18,782,309,23],
[25,184,328,50],
[13,1359,202,24],
[28,566,50,42],
[56,238,396,32],
[27,1529,878,19],
[90,1580,363,36],
[61,606,353,16],
[4,467,618,34],
[81,602,365,15],
[68,646,812,9],
[44,1453,310,28],
[61,591,6,9],
[8,176,405,14],
[48,728,746,28],
[83,1235,97,26],
[59,673,613,23],
[8,1562,368,42],
[22,207,274,6],
[88,1838,985,18],
[19,1293,358,45],
[30,1271,159,38],
[75,1417,606,50],
[64,182,484,45],
[62,901,457,20],
[21,14,740,17],
[50,89,977,24],
[68,1105,647,41],
[75,117,519,23],
[50,238,229,2],
[50,817,244,21],
[38,40,130,5],
[1,781,448,1],
[56,1,80,37],
[33,1080,678,15],
[24,1568,96,17],
[48,240,604,43],
[61,1668,73,22],
[49,132,744,29],
[42,614,666,24],
[65,1235,715,38],
[100,231,606,18],
[97,1559,662,40],
[20,232,133,37],
[82,63,518,8],
[60,752,226,11],
[36,1686,126,34],
[44,1320,460,36],
[65,508,747,42],
[39,1171,871,38],
[89,1099,251,37],
[18,1440,882,27],
[77,1146,406,43],
[57,1599,937,27],
[79,773,144,42],
[39,84,211,11],
[18,1767,707,25],
[10,1773,298,4],
[29,410,162,22],
[71,1215,692,24],
[28,1764,929,45],
[41,1731,141,5],
[28,1398,987,23],
[83,1660,776,2],
[3,891,374,43],
[41,465,710,14],
[64,1605,494,35],
[82,1571,491,14],
[63,1830,951,18],
[80,1616,50,34],
[45,11,287,35],
[82,874,85,50],
[34,988,638,2],
[22,212,508,1],
[2,560,248,33],
[21,1110,8,35],
[51,1134,837,43],
[34,593,649,3],
[74,223,521,35],
[63,98,944,22],
[30,130,24,13],
[54,1215,14,47],
[60,806,82,47],
[61,1729,573,36],
[24,575,832,29],
[31,905,339,20],
[47,808,579,47],
[8,1452,100,19],
[84,656,728,42],
[56,231,196,48],
[73,1031,326,22],
[39,163,862,22],
[50,5,331,33],
[20,1146,25,16],
[36,1664,7,2],
[1,749,77,35],
[28,648,907,27],
[93,908,110,6],
[87,100,648,8],
[69,610,791,45],
[69,1742,618,13],
[81,6,598,22],
[34,1115,879,7],
[15,490,162,41],
[49,803,163,35],
[24,672,353,30],
[19,205,148,41],
[59,1521,261,18],
[59,247,298,40],
[50,1198,905,30],
[21,553,99,29],
[9,1534,364,8],
[88,651,509,20],
[89,964,129,13],
[70,51,531,1],
[71,1612,33,50],
[88,194,940,22],
[89,336,874,29],
[30,1786,614,37],
[35,1252,882,39],
[53,559,833,39],
[76,1880,896,12],
[93,1496,102,11],
[6,734,371,38],
[51,1260,584,14],
[21,1488,627,36],
[16,633,454,30],
[78,1383,440,43],
[94,1556,959,19],
[13,104,198,38],
[16,1711,959,36],
[44,701,564,32],
[74,1900,272,40],
[29,1359,282,5],
[8,1860,493,4],
[71,1744,313,16],
[25,1854,363,26],
[17,1404,762,47],
[37,895,82,34],
[82,493,18,36],
[39,1221,39,45],
[96,1609,525,1],
[11,1863,688,49],
[6,866,510,47],
[28,138,396,38],
[40,292,52,3],
[65,1739,356,39],
[70,261,415,49],
[84,1171,820,26],
[84,1680,999,5],
[46,1649,434,33],
[90,1419,61,12],
[48,1444,621,11],
[86,1717,861,10],
[7,827,974,32],
[60,488,992,15],
[50,1643,643,15],
[48,248,905,14],
[30,427,547,2],
[3,615,677,46],
[95,453,40,1],
[16,599,207,34],
[78,423,394,13],
[89,838,612,47],
[9,1873,322,28],
[33,1003,590,34],
[37,1196,32,34],
[49,1707,92,15],
[12,856,861,4],
[54,850,42,43],
[59,677,971,33],
[58,1567,776,44],
[9,614,915,34],
[14,1715,398,39],
[75,395,136,44],
[41,165,21,32],
[28,756,519,45],
[59,532,864,37],
[76,1347,812,37],
[54,861,160,40],
[42,1241,769,30],
[67,1681,765,46],
[40,461,430,14],
[95,1769,975,19],
[82,531,10,12],
[71,163,224,44],
[4,1144,375,14],
[69,637,21,28],
[76,612,581,20],
[50,1112,515,1],
[22,1576,596,46],
[98,159,56,30],
[39,78,44,11],
[44,71,146,49],
[38,459,120,1],
[93,408,778,19],
[77,1424,443,10],
[37,1295,619,43],
[64,1889,297,14],
[100,1881,413,34],
[78,1790,354,1],
[53,644,272,16],
[44,268,711,39],
[1,98,850,8],
[99,796,559,44],
[99,1734,171,6],
[19,947,257,41],
[93,693,51,46],
[96,284,165,34],
[91,1004,87,33],
[50,1805,254,7],
[91,1505,321,49],
[1,743,66,10],
[52,882,69,17],
[100,1530,30,3],
[10,400,467,14],
[53,846,368,9],
[69,87,251,45],
[50,759,273,7],
[90,1344,464,37],
[34,1528,983,46],
[46,849,392,49],
[96,950,727,23],
[85,1130,182,34],
[3,1798,720,46],
[77,1890,469,10],
[28,1817,482,19],
[40,520,455,24],
[6,1131,109,2],
[59,1055,347,4],
[31,340,642,9],
[13,826,33,27],
[48,1417,401,23],
[98,859,174,46],
[58,334,476,33],
[26,929,299,50],
[66,1893,158,21],
[46,390,567,50],
[34,1634,380,45],
[58,1636,19,22],
[84,1219,197,30],
[45,195,450,11],
[20,994,514,14],
[69,317,327,25],
[69,413,142,30],
[78,1554,981,43],
[21,1840,804,15],
[57,1640,371,48],
[57,1658,881,12],
[31,790,456,15],
[70,23,610,1],
[83,1585,604,4],
[14,1312,717,23],
[4,1861,493,2],
[78,1453,868,38],
[35,403,678,21],
[47,403,853,30],
[43,24,9,46],
[87,1817,223,37],
[69,1424,801,47],
[86,1801,771,45],
[90,499,507,15],
[82,1774,116,42],
[71,1735,175,50],
[76,1783,153,24],
[91,340,301,21],
[94,441,615,15],
[47,37,788,23],
[26,617,932,36],
[86,1579,762,10],
[7,703,899,43],
[64,819,552,43],
[75,312,344,44],
[64,583,453,5],
[14,789,453,25],
[78,175,973,8],
[86,1676,15,44],
[40,1710,218,36],
[40,18,544,27],
[53,1156,333,43],
[98,200,873,3],
[39,1050,421,32],
[25,1560,116,38],
[26,718,271,35],
[10,427,948,14],
[13,878,672,35],
[87,1558,649,1],
[47,1305,545,33],
[2,1674,442,39],
[95,737,398,31],
[21,1007,47,23],
[40,81,677,9],
[93,498,223,34],
[35,338,611,50],
[14,683,641,38],
[35,1521,181,14],
[38,544,396,36],
[93,661,799,12],
[80,1378,890,18],
[4,1786,123,41],
[87,1234,411,14],
[47,283,904,14],
[89,1083,839,21],
[100,580,856,41],
[1,807,640,27],
[54,296,915,3],
[56,1686,488,8],
[1,655,569,40],
[23,579,274,38],
[77,219,272,32],
[45,203,985,19],
[47,1380,838,42],
[91,708,403,22],
[6,1635,755,48],
[19,1260,162,17],
[88,709,434,39],
[15,437,393,23],
[48,1000,26,12],
[10,1889,259,42],
[79,871,916,4],
[21,859,951,33],
[17,1815,920,8],
[61,1714,325,20],
[7,1472,291,17],
[82,558,788,9],
[16,335,439,38],
[50,1170,418,32],
[8,1662,706,44],
[86,184,635,21],
[51,548,266,4],
[17,319,103,28],
[55,1057,100,4],
[97,1084,438,20],
[56,986,133,26],
[17,1652,604,6],
[98,462,824,36],
[86,414,613,10],
[48,398,874,45],
[53,1814,364,29],
[7,763,627,47],
[59,1032,411,30],
[28,1050,43,45],
[58,1763,931,14],
[34,812,131,17],
[28,16,939,3],
[53,1670,112,44],
[68,109,423,48],
[94,1534,391,43],
[70,191,54,47],
[23,685,49,4],
[39,79,347,19],
[43,498,730,42],
[43,1768,911,25],
[4,72,634,4],
[70,1611,661,13],
[94,789,471,16],
[39,1831,233,41],
[47,348,675,28],
[16,395,857,2],
[98,42,552,33],
[93,1248,124,3],
[84,1160,249,30],
[81,959,822,4],
[8,658,296,24],
[39,1169,671,39],
[24,1694,737,12],
[56,197,371,45],
[34,115,575,11],
[35,675,137,17],
[45,1107,886,46],
[13,399,438,14],
[76,1098,589,32],
[92,618,283,49],
[4,613,277,32],
[21,1051,761,26],
[68,1199,903,46],
[26,860,121,32],
[62,556,259,14],
[65,1883,840,17],
[82,1070,943,1],
[85,677,441,3],
[16,78,635,24],
[64,1615,60,27],
[17,842,330,16],
[47,606,527,3],
[36,209,243,35],
[13,1772,654,14],
[35,301,194,25],
[34,1679,466,5],
[58,1350,663,13],
[60,868,400,3],
[46,1626,557,25],
[51,1862,745,40],
[82,745,361,42],
[50,212,610,39],
[34,576,770,32],
[97,996,231,11],
[59,37,729,36],
[89,808,189,26]]
    N,M = 100,10
    for single_implementing_time in get_ideas_implementing_time(ideas,N,M):
        print(single_implementing_time)
